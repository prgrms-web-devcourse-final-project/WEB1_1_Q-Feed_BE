buildscript {
	ext {
		queryDslVersion = "5.0.0"
		jwtVersion = "0.11.5"
	}
}

plugins {
	id 'org.springframework.boot' version '3.3.5' apply false
	id 'io.spring.dependency-management' version '1.1.6'
	id 'java'
	id "org.sonarqube" version "4.4.1.3373"
	id "jacoco"
}

def jacocoDir = layout.buildDirectory.dir("reports/")
jacocoTestReport {
	dependsOn test	// 테스트가 수행되어야만 report를 생성할 수 있도록 설정
	reports {
		html.required.set(true)
		xml.required.set(true)
		csv.required.set(true)
		html.destination jacocoDir.get().file("jacoco/index.html").asFile
		xml.destination jacocoDir.get().file("jacoco/index.xml").asFile
		csv.destination jacocoDir.get().file("jacoco/index.csv").asFile
	}

}

sonar {
	properties {
		property "sonar.projectKey", "prgrms-web-devcourse-final-project_WEB1_1_Q-Feed_BE"
		property "sonar.organization", "prgrms-web-devcourse-final-project"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}


allprojects {
	repositories {
		mavenCentral()
	}
}

subprojects {

	group = 'com.wsws'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		//lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		// Test
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
	}

	test {
		useJUnitPlatform()
	}

	// 기본 설정
	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}
}

// module-api만 실행 가능한 Spring Boot JAR 파일 생성
project(':module-api') {
	bootJar {
		enabled = true
	}
}