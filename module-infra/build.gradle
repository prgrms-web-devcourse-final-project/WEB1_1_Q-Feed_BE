dependencies {
	implementation project(':module-common')
	implementation project(':module-domain')

	//jpa + querydsl
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// QueryDSL 의존성
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"

	// Jakarta API 관련 추가 어노테이션 프로세싱
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//보안
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation "io.jsonwebtoken:jjwt-api:${jwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"

	//mysql
	implementation 'com.mysql:mysql-connector-j'


	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//s3
	implementation 'software.amazon.awssdk:s3:2.20.89'
	implementation 'software.amazon.awssdk:auth:2.20.89'
	implementation 'software.amazon.awssdk:core:2.20.89'

	// Redisson
	implementation 'org.redisson:redisson-spring-boot-starter:3.39.0'

}

// QueryDSL 소스 생성 디렉토리
def querydslSrcDir = "$buildDir/generated/querydsl"

tasks.withType(JavaCompile){
	// QueryDSL 파일이 생성될 디렉토리 설정
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

sourceSets {
	main {
		java {
			srcDirs += [querydslSrcDir] // Q 클래스를 소스셋에 추가
		}
	}
}

clean {
	delete querydslSrcDir // 클린 빌드 시 생성된 Q 클래스 삭제
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-parameters'
}